[






{
"title": "Overview",
"tags": "getting_started",
"keywords": "",
"url": "/CW/",
"summary": ""
},



{
"title": "About the author",
"tags": "about the author",
"keywords": "M0GZG, CW",
"url": "/CW/mydoc_about/",
"summary": "Hello from M0GZG in the UK."
},



{
"title": "audio_dir command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_audio_dir/",
"summary": ""
},



{
"title": "audio_filename command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_audio_filename/",
"summary": ""
},



{
"title": "author command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_author/",
"summary": ""
},



{
"title": "Book Converting",
"tags": "getting_startedtutorialcommandsbook",
"keywords": "farnsworth_timing, tutorial",
"url": "/CW/mydoc_book_converting/",
"summary": "How to convert text to an MP3 sound file for use in an MP3 player."
},



{
"title": "book_dir command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_book_dir/",
"summary": ""
},



{
"title": "Book Reading",
"tags": "getting_startedtutorialcommandsbook",
"keywords": "farnsworth_timing, tutorial",
"url": "/CW/mydoc_book_reading/",
"summary": "Here we look at how we can read a book with CW."
},



{
"title": "Callsigns",
"tags": "getting_startedtutorialcommands",
"keywords": "tutorial",
"url": "/CW/mydoc_callsigns/",
"summary": "In this tutorial we will practice randomly generated callsigns."
},



{
"title": "command_line command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_command_line/",
"summary": ""
},



{
"title": "Config file",
"tags": "tutorial",
"keywords": "tutorial",
"url": "/CW/mydoc_config_file/",
"summary": "How to make use of a config file."
},



{
"title": "The cw executable",
"tags": "getting_startedtutorialcommandsbook",
"keywords": "cw, tutorial, bin",
"url": "/CW/mydoc_cw_executable/",
"summary": "Using the cw command line executable."
},



{
"title": "CW script",
"tags": "",
"keywords": "",
"url": "/CW/mydoc_cw_script/",
"summary": ""
},



{
"title": "double_words command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_double_words/",
"summary": ""
},



{
"title": "Using ebook2cw",
"tags": "tutorial",
"keywords": "tutorial",
"url": "/CW/mydoc_ebook2cw/",
"summary": "Making use of the ebook2cw utility."
},



{
"title": "effective_wpm command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_effective_wpm/",
"summary": ""
},



{
"title": "ewpm command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_ewpm/",
"summary": ""
},



{
"title": "Excluding files",
"tags": "single_sourcing",
"keywords": "exclusion, separating outputs, removing files from outputs",
"url": "/CW/mydoc_exluding_files/",
"summary": "By default, all the files in your Jekyll project are included in the output (this differs from DITA projects, which don't include files unless noted on the map). If you're single sourcing, you'll need to exclude the files that shouldn't be included in the output. The sidebar doesn't control inclusion or exclusion."
},



{
"title": "Farnsworth timing",
"tags": "getting_startedtutorialcommandsfarnsworth",
"keywords": "farnsworth_timing, tutorial",
"url": "/CW/mydoc_farnsworth_timing/",
"summary": "In this tutorial we check out the use of the extended_wpm command to utilize the ideas of Farnsworth Timing within our tests."
},



{
"title": "Five Common Words",
"tags": "getting_startedtutorialcommands",
"keywords": "five_common_words, tutorial",
"url": "/CW/mydoc_five_common_words/",
"summary": "In this tutorial we will write several morse tests that generate 5 common random words - play them at our desired speed - and test our morse copying accuracy."
},



{
"title": "Fixed Length Words",
"tags": "getting_startedtutorialcommands",
"keywords": "fixed_length_words, tutorial",
"url": "/CW/mydoc_fixed_length_words/",
"summary": "In this tutorial we will look at word length in more detail."
},



{
"title": "frequency command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_frequency/",
"summary": ""
},



{
"title": "Generating PDFs",
"tags": "publishingsingle_sourcingcontent_types",
"keywords": "PDF, prince, prince XML, ant, xsl fo",
"url": "/CW/mydoc_generating_pdfs/",
"summary": "You can generate a PDF from your Jekyll project. You do this by creating a web version of your project that is printer friendly. You then use utility called Prince to iterate through the pages and create a PDF from them. It works quite well and gives you complete control to customize the PDF output through CSS, including page directives and dynamic tags from Prince."
},



{
"title": "Learning the Alphabet",
"tags": "getting_startedtutorialcommands",
"keywords": "alphabet, tutorial",
"url": "/CW/mydoc_learning_the_alphabet/",
"summary": "In this tutorial we will see how to write tests aimed at learning the alphabet."
},



{
"title": "Letter and Number Groups",
"tags": "getting_startedtutorialcommands",
"keywords": "tutorial",
"url": "/CW/mydoc_letter_and_number_groups/",
"summary": "In this tutorial we will generate groups of letters, numbers, and both! The ability to copy groups of letters and numbers is essential for copying callsigns well - especially during CW contests!"
},



{
"title": "Letter Filtering",
"tags": "getting_startedtutorialcommands",
"keywords": "tutorial",
"url": "/CW/mydoc_letter_filtering/",
"summary": "In this tutorial we will look at filtering out words with specific letters for practice."
},



{
"title": "name command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_name/",
"summary": ""
},



{
"title": "Navtabs",
"tags": "formatting",
"keywords": "navigation tabs, hide sections, tabbers, interface tabs",
"url": "/CW/mydoc_navtabs/",
"summary": "Navtabs provide a tab-based navagation directly in your content, allowing users to click from tab to tab to see different panels of content. Navtabs are especially helpful for showing code samples for different programming languages. The only downside to using navtabs is that you must use HTML instead of Markdown."
},



{
"title": "no_noise command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_no_noise/",
"summary": ""
},



{
"title": "noise command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_noise/",
"summary": ""
},



{
"title": "Pages",
"tags": "getting_startedformattingcontent_types",
"keywords": "pages, authoring, exclusion, frontmatter",
"url": "/CW/mydoc_pages/",
"summary": "This theme primarily uses pages. You need to make sure your pages have the appropriate frontmatter. One frontmatter tag your users might find helpful is the summary tag. This functions similar in purpose to the shortdesc element in DITA."
},



{
"title": "Posts",
"tags": "getting_startedformattingcontent_types",
"keywords": "posts, blog, news, tutorial, exclusion, frontmatter",
"url": "/CW/mydoc_posts/",
"summary": "You can use posts when you want to create blogs or news type of content."
},



{
"title": "print_letters command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_print_letters/",
"summary": ""
},



{
"title": "Program output",
"tags": "getting_startedtutorialcommandsfarnsworth",
"keywords": "farnsworth_timing, tutorial",
"url": "/CW/mydoc_program_output/",
"summary": "Program output is configurable, making it possible to change colours to suit the shell background colour, or user preference."
},



{
"title": "quality command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_quality/",
"summary": ""
},



{
"title": "Range of Word Lengths",
"tags": "getting_startedtutorialcommands",
"keywords": "tutorial",
"url": "/CW/mydoc_range_of_word_lengths/",
"summary": "Here we will look at writing a script to test across a range of word lengths."
},



{
"title": "Release notes",
"tags": "getting_started",
"keywords": "CW, morse code, release notes, announcements",
"url": "/CW/mydoc_release_notes/",
"summary": "Version 0.2 of the CW documentation."
},



{
"title": "RSS Feed Reading",
"tags": "getting_startedtutorialcommandsbook",
"keywords": "farnsworth_timing, tutorial",
"url": "/CW/mydoc_rss_feed/",
"summary": "Here we look at reading RSS feeds in CW."
},



{
"title": "shuffle command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_shuffle/",
"summary": ""
},



{
"title": "Sidebar Source",
"tags": "getting_started",
"keywords": "sidebar, accordion, yaml, iteration, for loop, navigation, attributes, conditional filtering",
"url": "/CW/mydoc_sidebar_source/",
"summary": "The sidebar navigation uses a jQuery component called Navgoco. The sidebar is a somewhat complex part of the theme that remembers your current page, highlights the active item, stays in a fixed position on the page, and more. This page explains a bit about how the sidebar was put together."
},



{
"title": "Special layouts overview",
"tags": "special_layouts",
"keywords": "layouts, information design, presentation",
"url": "/CW/mydoc_special_layouts/",
"summary": "This theme has a few special layouts. Special layouts include the JS files they need directly in the page. The JavaScript for each special layout does not load by default for every page in the site."
},



{
"title": "Syntax highlighting",
"tags": "formatting",
"keywords": "rouge, pygments, prettify, color coding,",
"url": "/CW/mydoc_syntax_highlighting/",
"summary": "You can apply syntax highlighting to your code. This theme uses pygments and applies color coding based on the lexer you specify."
},



{
"title": "Tables",
"tags": "formatting",
"keywords": "datatables, tables, grids, markdown, multimarkdown, jquery plugins",
"url": "/CW/mydoc_tables/",
"summary": "You can format tables using either multimarkdown syntax or HTML. You can also use jQuery datatables (a plugin) if you need more robust tables."
},



{
"title": "Tag archives overview",
"tags": "navigation",
"keywords": "archives, tagging",
"url": "/CW/mydoc_tag_archives_overview/",
"summary": "This is an overview to the tag archives section. Really the only reason this section is listed explicitly in the TOC here is to demonstrate how to add a third-level to the navigation."
},



{
"title": "title command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_title/",
"summary": ""
},



{
"title": "",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_use_ebook2cw/",
"summary": "use_ebook2cw command."
},



{
"title": "use_ruby_tone command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_use_ruby_tone/",
"summary": ""
},



{
"title": "word_spacing command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_word_spacing/",
"summary": ""
},



{
"title": "wpm command",
"tags": "commands",
"keywords": "commands",
"url": "/CW/mydoc_wpm/",
"summary": ""
},



{
"title": "YAML tutorial in the context of Jekyll",
"tags": "formatting",
"keywords": "search",
"url": "/CW/mydoc_yaml_tutorial/",
"summary": "YAML is a format that relies on white spacing to separate out the various elements of content. Jekyll lets you use Liquid with YAML as a way to parse through the data. Storing items for your table of contents is one of the most common uses of YAML with Jekyll."
},



{
"title": "News",
"tags": "",
"keywords": "news, blog, updates, release notes, announcements",
"url": "/CW/news/",
"summary": ""
},



{
"title": "News",
"tags": "",
"keywords": "news, blog, updates, release notes, announcements",
"url": "/CW/news_archive/",
"summary": ""
},





{
"title": "Reveal Mode",
"tags": "getting_startedtutorialcommandsreveal",
"keywords": "reveal, tutorial",
"url": "/CW/mydoc_reveal_mode/",
"summary": "Reveal mode can be used to hide output until the test conclusion."
},









































{
"title": "Welcome to the CW Documentation",
"tags": "news",
"keywords": "",
"url": "/CW/myupdate/",
"summary": ""
}



]